{{ if eq .input "httpjson" }}

type: httpjson
config_version: "2"
interval: {{ .interval }}

request.method: POST
request.ssl: {{ .ssl | tojson }}
request.url: {{ .url }}
request.body:
    limit: 5
    returnFormat: json
request.transforms:
- set:
    target: header.Authorization
    value: token {{ .api_token }}
- set:
    target: body.timestamp
    value: '[[ .cursor.timestamp ]]'
    default: '[[ formatDate (now (parseDuration "-{{ .first_interval }}")) "UnixDate" ]]'
response.split:
    target: body.response
    split:
      target: body.Event.Attribute
      keep_parent: true
cursor:
  timestamp:
    value: '[[ .last_event.Event.timestamp ]]'

{{ else if eq .input "file" }}

type: log
paths:
{{ range $i, $path := .paths }}
  - {{$path}}
{{ end }}
exclude_files: [".gz$"]

{{ end }}

tags: {{.tags | tojson}}
publisher_pipeline.disable_host: {{ inList .tags "forwarded" }}

processors:
  - decode_json_fields:
      fields: [message]
      target: json
  - add_fields:
      target: ''
      fields:
        ecs.version: 1.6.0
