description: Pipeline for parsing Abuse.ch Malware Threat Intel
processors:

####################
# Event ECS fields #
####################
- set:
    field: event.ingested
    value: '{{_ingest.timestamp}}'
- set:
    field: event.kind
    value: enrichment
- set:
    field: event.category
    value: threat
- set:
    field: event.type
    value: indicator

######################
# General ECS fields #
######################
- rename:
    field: json
    target_field: threatintel.abusemalware
    ignore_missing: true

#####################
# Threat ECS Fields #
#####################
- date:
    field: threatintel.abusemalware.firstseen
    target_field: threat.indicator.first_seen
    formats:
      - "yyyy-MM-dd HH:mm:ss z"
      - "yyyy-MM-dd HH:mm:ss Z"
      - "yyyy-MM-dd HH:mm:ss"
    if: "ctx?.threatintel?.abusemalware.firstseen != null"
- set:
    field: threat.indicator.type
    value: file
- rename:
    field: threatintel.abusemalware.file_size
    target_field: threat.indicator.file.size
    ignore_missing: true
- convert:
    field: threat.indicator.file.size
    type: long
    ignore_missing: true
- rename:
    field: threatintel.abusemalware.md5_hash
    target_field: threat.indicator.file.hash.md5
    ignore_missing: true
- rename:
    field: threatintel.abusemalware.sha256_hash
    target_field: threat.indicator.file.hash.sha256
    ignore_missing: true
- append:
    field: related.hash
    value: '{{ threat.indicator.file.hash.md5 }}'
    if: ctx?.threat?.indicator?.file?.hash?.md5 != null
- append:
    field: related.hash
    value: '{{ threat.indicator.file.hash.sha256 }}'
    if: ctx?.threat?.indicator?.file?.hash?.sha256 != null

######################
# Cleanup processors #
######################
- set:
    field: ctx.threat.indicator.type
    value: unknown
    if: ctx?.threat?.indicator?.type == null
- remove:
    field: threatintel.abusemalware.virustotal
    ignore_missing: true
    if: ctx?.threatintel?.abusemalware?.virustotal == null
- remove:
    field:
    - threatintel.abusemalware.firstseen
    - message
    ignore_missing: true
on_failure:
- set:
    field: error.message
    value: '{{ _ingest.on_failure_message }}'
