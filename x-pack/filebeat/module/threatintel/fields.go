// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package threatintel

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "threatintel", asset.ModuleFieldsPri, AssetThreatintel); err != nil {
		panic(err)
	}
}

// AssetThreatintel returns asset data.
// This is the base64 encoded gzipped contents of module/threatintel.
func AssetThreatintel() string {
	return "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"
}
