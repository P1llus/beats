description: Pipeline for parsing checkpoint firewall logs
processors:
- rename:
    field: zoom.event
    target_field: event.action
    ignore_missing: true
- rename:
    field: zoom.payload
    target_field: _temp_.payload
    ignore_missing: true
- remove:
    field: zoom
    ignore_missing: true
- rename:
    field: _temp_.payload
    target_field: zoom
    ignore_missing: true
- pipeline:
    name: '{< IngestPipeline "meeting" >}'
    if: "ctx?.event?.action.startsWith('meeting')"
- pipeline:
    name: '{< IngestPipeline "account" >}'
    if: "ctx?.event?.action.startsWith('account')"
- pipeline:
    name: '{< IngestPipeline "chat_message" >}'
    if: "ctx?.event?.action.startsWith('chat_message')"
- pipeline:
    name: '{< IngestPipeline "chat_channel" >}'
    if: "ctx?.event?.action.startsWith('chat_message')"
- pipeline:
    name: '{< IngestPipeline "phone" >}'
    if: "ctx?.event?.action.startsWith('phone')"
- pipeline:
    name: '{< IngestPipeline "recording" >}'
    if: "ctx?.event?.action.startsWith('recording')"
- pipeline:
    name: '{< IngestPipeline "user" >}'
    if: "ctx?.event?.action.startsWith('user')"
- pipeline:
    name: '{< IngestPipeline "webinar" >}'
    if: "ctx?.event?.action.startsWith('webinar')"
- pipeline:
    name: '{< IngestPipeline "zoomroom" >}'
    if: "ctx?.event?.action.startsWith('zoomroom')"
on_failure:
- set:
    field: error.message
    value: '{{ _ingest.on_failure_message }}'