description: Initial pipeline for parsing Zoom webhooks
processors:
- set:
    field: observer.vendor
    value: Zoom
- set:
    field: observer.product
    value: Webhook
- append:
    field: event.kind
    value: event
- rename:
    field: zoom.event
    target_field: event.action
    ignore_missing: true
- rename:
    field: zoom.payload
    target_field: _temp_.payload
    ignore_missing: true
- remove:
    field: zoom
    ignore_missing: true
- rename:
    field: _temp_.payload
    target_field: zoom
    ignore_missing: true
- append:
    field: related.user
    value: "{{zoom.operator_idl}}"
    if: "ctx?.zoom?.operator_id != null"
# Removing some fields that have complex nested arrays that might impact performance
- remove:
    field:
    - zoom.object.occurences
    - zoom.old_object.occurences
    - zoom.object.recurrence
    - zoom.old_object.recurrence
    - zoom.object.managed_domains
    - zoom.old_object.managed_domains
    - zoom.object.registrant.custom_questions
    - zoom.old_object.registrant.custom_questions
    - zoom.object.call_logs
    - zoom.old_object.call_logs
    - zoom.object.recording_file
    - zoom.old_object.recording_file
    ignore_missing: true
- pipeline:
    name: '{< IngestPipeline "meeting" >}'
    if: "ctx?.event?.action.startsWith('meeting')"
- pipeline:
    name: '{< IngestPipeline "account" >}'
    if: "ctx?.event?.action.startsWith('account')"
- pipeline:
    name: '{< IngestPipeline "chat_message" >}'
    if: "ctx?.event?.action.startsWith('chat_message')"
- pipeline:
    name: '{< IngestPipeline "chat_channel" >}'
    if: "ctx?.event?.action.startsWith('chat_message')"
- pipeline:
    name: '{< IngestPipeline "phone" >}'
    if: "ctx?.event?.action.startsWith('phone')"
- pipeline:
    name: '{< IngestPipeline "recording" >}'
    if: "ctx?.event?.action.startsWith('recording')"
- pipeline:
    name: '{< IngestPipeline "user" >}'
    if: "ctx?.event?.action.startsWith('user')"
- pipeline:
    name: '{< IngestPipeline "webinar" >}'
    if: "ctx?.event?.action.startsWith('webinar')"
- pipeline:
    name: '{< IngestPipeline "zoomroom" >}'
    if: "ctx?.event?.action.startsWith('zoomroom')"
on_failure:
- set:
    field: error.message
    value: '{{ _ingest.on_failure_message }}'
